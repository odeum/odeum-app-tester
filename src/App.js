import React, { Component } from 'react'
import { 
	AppContainer,
	Header, 
	MenuPanel, 
	Menu,
	Tab,
	Footer } from 'odeum-app'

/* Demo */
import RouteDemo from 'demos/RouteDemo'
import ReactComp from 'demos/ReactComp'
import { SimpleDiv } from 'demos/SimpleDiv'
import { RenderFooterLabel, handleLink } from './demos/FooterLabel'

class App extends Component {
	/*Temporary Help Demo */

	constructor(props) {
		super(props)

		this.state = {
			helpID: 0
		}
		Menu.defaultProps = {
			SetHelpID: this.SetHelpID,
			icon: 'menu'
		}

		Tab.defaultProps = {
			SetHelpID: this.SetHelpID,
			label: 'Tab',
			icon: 'tab'
		}

	}

	SetHelpID = (helpID) => {
		// console.log(helpID)
		return helpID === this.state.helpID ? null : this.setState({ helpID: helpID })
	}

	/*End TempDemo */
	render() {
		return (
			<AppContainer>
				{/* 
				Todo: Use default theme transparently and include theme prop in AppContainer that overwrites default theme
				*/}
				<Header />
				<MenuPanel>
					<Menu route={'/'} exact helpID={10}>
						<SimpleDiv />
					</Menu>
					<Menu route={'/home'} label={'Menu with no tabs'} icon={'home'}>
						<ReactComp />
						<SimpleDiv />
					</Menu>

					<Menu icon={'people'} route={'/child'} label={'Menu with one Tab and a Route Demo'}>
						<Tab icon={'assignment'} label={'Overflow'} helpID={11} >
							<RouteDemo />
						</Tab>
					</Menu>
					<Menu icon={'people'} route={'/children1'} label={'Menu with children'}>
						<Tab icon={'assignment'} label={'Overflow'} helpID={104}>
							<SimpleDiv />
						</Tab>
						<Tab icon={'assignment_turned_in'} label={'Lady Gaga'} route={'/react-component1'} helpID={12}>
							<ReactComp helpID={2} />
						</Tab>
						<Tab icon={'visibility'} label={'Hello workspace'} route={'/workspace1'} helpID={13}>
							<div>Hello Workspace ... </div>
						</Tab>
					</Menu>
					<Menu label={'autogenerated'} helpID={'auto'}>
						<Tab label={'Route'}>
							AutoGenerated Route
						</Tab>
					</Menu>
					{/* 					
					Todo: Create defaultprops for Menu and Tab so they can be used without any props (label, icon, ...)
					*/}

				</MenuPanel>
				<Footer label={RenderFooterLabel} labelLink={handleLink()} helpID={this.state.helpID} />
			</AppContainer>
		)
	}
}


export default App


