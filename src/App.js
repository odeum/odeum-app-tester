import React, { Component } from 'react'
import { 
	AppContainer,
	Header, 
	MenuPanel, 
	Menu,
	Tab, 
	Workspace, 
	Footer } from 'odeum-app'

/* Demo */
import ReactComp from 'demos/ReactComp'
import { SimpleDiv } from 'demos/SimpleDiv'

class App extends Component {
	constructor(props) {
		super(props)

		this.state = {
			helpID: 0
		}

		Workspace.defaultProps = {
			SetHelpID: this.SetHelpID
		}

	}

	SetHelpID = (helpID) => {
		return helpID === this.state.helpID ? null : this.setState({ helpID: helpID })
	}

	render() {
		return (
			<AppContainer>
				{/* 
				Todo: Use default theme transparently and include theme prop in AppContainer that overwrites default theme
				Todo: Remove all inline styles and use styled-components ...
				*/}
				<Header />
				<MenuPanel>

					<Menu route={'/'} exact>
						<Workspace helpID={0}>
							Home Demo
						</Workspace>
					</Menu>

					<Menu route={'/home'} label={'Menu with no tabs'} icon={'home'}>
						<Workspace>
							No tabs workspace
						</Workspace>
					</Menu>

					<Menu icon={'people'} route={'/children'} label={'Menu with children'}>
						<Tab icon={'assignment'} label={'Overflow'}>
							<Workspace helpID={1}>
								<SimpleDiv />
							</Workspace>
						</Tab>
						<Tab icon={'assignment_turned_in'} label={'Lady Gaga'} route={'/react-component'}>
							<Workspace helpID={2}>
								<ReactComp />								
							</Workspace>

						</Tab>
						<Tab icon={'visibility'} label={'Hello workspace'} route={'/workspace'}>
							<Workspace helpID={3}>
								<div>Hello Workspace ... </div>
							</Workspace>
						</Tab>
					</Menu>

					<Menu label={'Autogenerated routes'}>
						<Tab label={'Route'}>
							<Workspace helpID={4}>
								Auto generated route
							</Workspace>
						</Tab>
					</Menu>
					{/* 					
					Todo: Create defaultprops for Menu and Tab so they can be used without any props (label, icon, ...)
					Todo: Fix Menu/MenuPanel so you can settle for only 1 tab
					Workspace rendered from props
					*/}

				</MenuPanel>
				<Footer label={RenderFooterLabel} labelLink={handleLink()} debug={String(this.state.helpID)} />
			</AppContainer>
		)
	}
}

const handleLink = () => {
	return '/children/overflow'
}

const RenderFooterLabel = () => {
	const date = new Date()
	return (
		<div>
			<strong>ODEUM Code Lite </strong> v1.0.0 Â© Copyright
			{' '}{date.getFullYear()}
		</div>
	)
}

export default App

